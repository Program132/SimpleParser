        -:    0:Source:D:/GitHub/SimpleParser/main.cpp
        -:    0:Graph:D:\GitHub\SimpleParser\cmake-build-debug-coverage\CMakeFiles\SimpleParser.dir\main.cpp.gcno
        -:    0:Data:D:\GitHub\SimpleParser\cmake-build-debug-coverage\CMakeFiles\SimpleParser.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Content/TokenBuilding.h"
        -:    2:#include "Content/Parser.h"
        -:    3:
        -:    4:#include <iostream>
        -:    5:#include <fstream>
        -:    6:
        -:    7:using namespace SimpleParser;
        -:    8:
function main called 1 returned 0% blocks executed 36%
        1:    9:auto main() -> int 
        -:   10:{
        1:   11:	std::cout << "Simple Parser Loading... \n\n" << std::endl;
        1:   11-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   11-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        -:   12:
        1:   13:	std::ifstream file("../test.myc");
        1:   13-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   14:	if (!file) {
        1:   14-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   14-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    #####:   15:		std::cerr << "Did not find the file." << std::endl;
    %%%%%:   15-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   15-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   16:		return 0;
    %%%%%:   16-block  0
        -:   17:	}
        1:   18:	std::string f_content((std::istreambuf_iterator<char>(file)), (std::istreambuf_iterator<char>()));
        1:   18-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   18-block  1
call    6 returned 1
    $$$$$:   18-block  2
    $$$$$:   18-block  3
    $$$$$:   18-block  4
        -:   19:
        -:   20:	// std::cout << f_content << std::endl;
        -:   21:
        -:   22:
        -:   23:	TokenBuilding tokenBuilding;
        1:   24:	std::vector<Token> tokens = tokenBuilding.parse(f_content);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   25:
        -:   26:	/*
        -:   27:	 *  for (Token currentToken : tokens)
        -:   28:        {
        -:   29:            currentToken.debugPrint();
        -:   30:        }
        -:   31:    */
        -:   32:
        -:   33:
        1:   34:	Parser parser;
        1:   34-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   35:	parser.parse(tokens);
        1:   35-block  0
call    0 returned 0
branch  1 taken 0 (fallthrough)
branch  2 taken 0 (throw)
        -:   36:
    #####:   37:    parser.debugPrint();
    %%%%%:   37-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   38:
    #####:   39:	return 0;
    #####:   40:}
    %%%%%:   40-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    %%%%%:   40-block  1
call    3 never executed
    $$$$$:   40-block  2
call    4 never executed
    $$$$$:   40-block  3
call    5 never executed
    $$$$$:   40-block  4
call    6 never executed
    $$$$$:   40-block  5
call    7 never executed
